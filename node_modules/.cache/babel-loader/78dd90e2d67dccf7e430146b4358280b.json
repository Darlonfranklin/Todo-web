{"ast":null,"code":"var _jsxFileName = \"/home/darlon/Documentos/web/src/views/Task/Task.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Footer, Header } from \"../../components\";\nimport typeIcons from \"../../utils/typeIcons\";\nimport api from \"../../services/api\";\nimport { Container, Form, Input, Options, Save, TextArea, TypeIcons } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Task = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const [lateCount, setLateCount] = useState(\"\");\n  const [type, setType] = useState();\n  const [id, setId] = useState();\n  const [done, setDone] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [date, setDate] = useState();\n  const [hour, setHour] = useState();\n  const [macddress, setMacddress] = useState(\"22:22:22:22:22:22\");\n\n  const lateVerify = async () => {\n    await api.get(`/task/filter/late/22:22:22:22:22:22`).then(response => {\n      setLateCount(response.data.length);\n    });\n  };\n\n  const LoadTaskDetails = async () => {\n    await api.get(`/task/${match.params.id}`).then(response => {\n      setType(response.data.type);\n      setTitle(response.data.title);\n      setDescription(response.data.description);\n      setDate(new Date(response.data.when));\n      setHour(new Date(response.data.when));\n    });\n  };\n\n  const Saving = async () => {\n    await api.post(\"/task\", {\n      macddress,\n      type,\n      title,\n      description,\n      when: `${date}T${hour}:00.000`\n    }).then(() => alert(\"TAREFA CADASTRADA COM SUCESSO!\"));\n  };\n\n  useEffect(() => {\n    lateVerify();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      lateCount: lateCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(TypeIcons, {\n        children: typeIcons.map((icon, index) => index > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setType(index),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: icon,\n            alt: \"Tipo da Tarefa\",\n            className: type && type != index && \"inative\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"T\\xEDtulo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"T\\xEDtulo da tarefa...\",\n          onChange: e => setTitle(e.target.value),\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Descri\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 5,\n          placeholder: \"Detalhes da tarefa...\",\n          onChange: e => setDescription(e.target.value),\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          placeholder: \"T\\xEDtulo da tarefa...\",\n          onChange: e => setDate(e.target.value),\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Hora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          placeholder: \"T\\xEDtulo da tarefa...\",\n          onChange: e => setHour(e.target.value),\n          value: hour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Options, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: done,\n            onChange: () => setDone(!done)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"CONCLU\\xCDDO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"EXCLUIR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Save, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: Saving,\n          children: \"SALVAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"lA6zhJXfAPm6v/CouqgR+qE9/AM=\");\n\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/darlon/Documentos/web/src/views/Task/Task.tsx"],"names":["useEffect","useState","Footer","Header","typeIcons","api","Container","Form","Input","Options","Save","TextArea","TypeIcons","Task","match","lateCount","setLateCount","type","setType","id","setId","done","setDone","title","setTitle","description","setDescription","date","setDate","hour","setHour","macddress","setMacddress","lateVerify","get","then","response","data","length","LoadTaskDetails","params","Date","when","Saving","post","alert","map","icon","index","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Footer, Header } from \"../../components\";\nimport typeIcons from \"../../utils/typeIcons\";\nimport api from \"../../services/api\";\nimport {\n  Container,\n  Form,\n  Input,\n  Options,\n  Save,\n  TextArea,\n  TypeIcons,\n} from \"./styles\";\n\nexport const Task: React.FC = ({ match }: any) => {\n  const [lateCount, setLateCount] = useState<string>(\"\");\n  const [type, setType] = useState<any>();\n  const [id, setId] = useState<number>();\n  const [done, setDone] = useState<boolean>(false);\n  const [title, setTitle] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [date, setDate] = useState<any>();\n  const [hour, setHour] = useState<any>();\n  const [macddress, setMacddress] = useState<string>(\"22:22:22:22:22:22\");\n\n  const lateVerify = async () => {\n    await api\n      .get(`/task/filter/late/22:22:22:22:22:22`)\n      .then((response: any) => {\n        setLateCount(response.data.length);\n      });\n  };\n\n  const LoadTaskDetails = async () => {\n    await api.get(`/task/${match.params.id}`).then((response: any) => {\n      setType(response.data.type);\n      setTitle(response.data.title);\n      setDescription(response.data.description);\n      setDate(new Date(response.data.when));\n      setHour(new Date(response.data.when));\n    });\n  };\n\n  const Saving = async () => {\n    await api\n      .post(\"/task\", {\n        macddress,\n        type,\n        title,\n        description,\n        when: `${date}T${hour}:00.000`,\n      })\n      .then(() => alert(\"TAREFA CADASTRADA COM SUCESSO!\"));\n  };\n\n  useEffect(() => {\n    lateVerify();\n  }, []);\n\n  return (\n    <Container>\n      <Header lateCount={lateCount} />\n      <Form>\n        <TypeIcons>\n          {typeIcons.map(\n            (icon, index) =>\n              index > 0 && (\n                <button type=\"button\" onClick={() => setType(index)}>\n                  <img\n                    src={icon}\n                    alt=\"Tipo da Tarefa\"\n                    className={type && type != index && \"inative\"}\n                  />\n                </button>\n              )\n          )}\n        </TypeIcons>\n\n        <Input>\n          <span>Título</span>\n          <input\n            type=\"text\"\n            placeholder=\"Título da tarefa...\"\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n          />\n        </Input>\n\n        <TextArea>\n          <span>Descrição</span>\n          <textarea\n            rows={5}\n            placeholder=\"Detalhes da tarefa...\"\n            onChange={(e) => setDescription(e.target.value)}\n            value={description}\n          />\n        </TextArea>\n\n        <Input>\n          <span>Data</span>\n          <input\n            type=\"date\"\n            placeholder=\"Título da tarefa...\"\n            onChange={(e) => setDate(e.target.value)}\n            value={date}\n          />\n        </Input>\n\n        <Input>\n          <span>Hora</span>\n          <input\n            type=\"time\"\n            placeholder=\"Título da tarefa...\"\n            onChange={(e) => setHour(e.target.value)}\n            value={hour}\n          />\n        </Input>\n\n        <Options>\n          <div>\n            <input\n              type=\"checkbox\"\n              checked={done}\n              onChange={() => setDone(!done)}\n            />\n            <span>CONCLUÍDO</span>\n          </div>\n          <button type=\"button\">EXCLUIR</button>\n        </Options>\n\n        <Save>\n          <button type=\"button\" onClick={Saving}>\n            SALVAR\n          </button>\n        </Save>\n      </Form>\n      <Footer />\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}