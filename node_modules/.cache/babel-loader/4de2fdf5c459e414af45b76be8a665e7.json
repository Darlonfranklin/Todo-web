{"ast":null,"code":"var _jsxFileName = \"/home/darlon/Documentos/web/src/views/Task/Task.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Footer, Header } from \"../../components\";\nimport typeIcons from \"../../utils/typeIcons\";\nimport api from \"../../services/api\";\nimport { Container, Form, Input, Options, Save, TextArea, TypeIcons } from \"./styles\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { isConnected } from \"../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Task = () => {\n  _s();\n\n  const [redirect, setRedirect] = useState(false);\n  const [type, setType] = useState();\n  const [done, setDone] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [date, setDate] = useState();\n  const [hour, setHour] = useState();\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const LoadTaskDetails = async () => {\n    await api.get(`/task/${params.id}`).then(response => {\n      setType(response.data.type);\n      setDone(response.data.done);\n      setTitle(response.data.title);\n      setDescription(response.data.description);\n      setDate(format(new Date(response.data.when), \"yyyy-MM-dd\"));\n      setHour(format(new Date(response.data.when), \"HH:mm\"));\n    });\n  };\n\n  const Saving = async () => {\n    if (!title) {\n      return alert(\"Você precisa informar título da tarefa\");\n    } else if (!description) {\n      return alert(\"Você precisa informar a descrição da tarefa\");\n    } else if (!type) {\n      return alert(\"Você precisa selecionar o tipo da tarefa\");\n    } else if (!date) {\n      return alert(\"Você precisa selecionar o tipo de tarefa\");\n    }\n\n    if (params.id) {\n      await api.put(`/task/${params.id}`, {\n        macddress: isConnected,\n        type,\n        done,\n        title,\n        description,\n        when: `${date}T${hour}:00.000`\n      }).then(() => setRedirect(true));\n    } else {\n      await api.post(\"/task\", {\n        macddress: isConnected,\n        type,\n        title,\n        description,\n        when: `${date}T${hour}:00.000`\n      }).then(() => setRedirect(true)).catch(response => {\n        alert(response.data.error);\n      });\n    }\n  };\n\n  const Remove = async () => {\n    const res = window.confirm(\"Deseja Realmente remover a tarefa?\");\n\n    if (res === true) {\n      await api.delete(`task/${params.id}`).then(() => setRedirect(true));\n    } else {\n      alert(\"tudo bem, vamos manter\");\n    }\n  };\n\n  useEffect(() => {\n    if (!isConnected) {\n      setRedirect(true);\n    }\n\n    LoadTaskDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [redirect && navigate(\"/\"), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(TypeIcons, {\n        children: typeIcons.map((icon, index) => index > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setType(index),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: icon,\n            alt: \"Tipo da Tarefa\",\n            className: type && type != index && \"inative\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"T\\xEDtulo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"T\\xEDtulo da tarefa...\",\n          onChange: e => setTitle(e.target.value),\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Descri\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 5,\n          placeholder: \"Detalhes da tarefa...\",\n          onChange: e => setDescription(e.target.value),\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          placeholder: \"T\\xEDtulo da tarefa...\",\n          onChange: e => setDate(e.target.value),\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Hora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          placeholder: \"T\\xEDtulo da tarefa...\",\n          onChange: e => setHour(e.target.value),\n          value: hour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Options, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: done,\n            onChange: () => setDone(!done)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"CONCLU\\xCDDO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), params.id && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: Remove,\n          children: \"EXCLUIR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Save, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: Saving,\n          children: \"SALVAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"ZpCbkEWpYd6oHhWOHlLCP9xs6kw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/darlon/Documentos/web/src/views/Task/Task.tsx"],"names":["useEffect","useState","Footer","Header","typeIcons","api","Container","Form","Input","Options","Save","TextArea","TypeIcons","useNavigate","useParams","format","isConnected","Task","redirect","setRedirect","type","setType","done","setDone","title","setTitle","description","setDescription","date","setDate","hour","setHour","params","navigate","LoadTaskDetails","get","id","then","response","data","Date","when","Saving","alert","put","macddress","post","catch","error","Remove","res","window","confirm","delete","map","icon","index","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Footer, Header } from \"../../components\";\nimport typeIcons from \"../../utils/typeIcons\";\nimport api from \"../../services/api\";\nimport {\n  Container,\n  Form,\n  Input,\n  Options,\n  Save,\n  TextArea,\n  TypeIcons,\n} from \"./styles\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { isConnected } from \"../../utils\";\n\nexport const Task: React.FC = () => {\n  const [redirect, setRedirect] = useState<boolean>(false);\n  const [type, setType] = useState<any>();\n  const [done, setDone] = useState<boolean>(false);\n  const [title, setTitle] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [date, setDate] = useState<any>();\n  const [hour, setHour] = useState<any>();\n\n  const params = useParams<any>();\n  const navigate = useNavigate();\n\n  const LoadTaskDetails = async () => {\n    await api.get(`/task/${params.id}`).then((response: any) => {\n      setType(response.data.type);\n      setDone(response.data.done);\n      setTitle(response.data.title);\n      setDescription(response.data.description);\n      setDate(format(new Date(response.data.when), \"yyyy-MM-dd\"));\n      setHour(format(new Date(response.data.when), \"HH:mm\"));\n    });\n  };\n\n  const Saving = async () => {\n    if (!title) {\n      return alert(\"Você precisa informar título da tarefa\");\n    } else if (!description) {\n      return alert(\"Você precisa informar a descrição da tarefa\");\n    } else if (!type) {\n      return alert(\"Você precisa selecionar o tipo da tarefa\");\n    } else if (!date) {\n      return alert(\"Você precisa selecionar o tipo de tarefa\");\n    }\n\n    if (params.id) {\n      await api\n        .put(`/task/${params.id}`, {\n          macddress: isConnected,\n          type,\n          done,\n          title,\n          description,\n          when: `${date}T${hour}:00.000`,\n        })\n        .then(() => setRedirect(true));\n    } else {\n      await api\n        .post(\"/task\", {\n          macddress: isConnected,\n          type,\n          title,\n          description,\n          when: `${date}T${hour}:00.000`,\n        })\n        .then(() => setRedirect(true))\n        .catch((response: any) => {\n          alert(response.data.error);\n        });\n    }\n  };\n\n  const Remove = async () => {\n    const res = window.confirm(\"Deseja Realmente remover a tarefa?\");\n    if (res === true) {\n      await api.delete(`task/${params.id}`).then(() => setRedirect(true));\n    } else {\n      alert(\"tudo bem, vamos manter\");\n    }\n  };\n\n  useEffect(() => {\n    if (!isConnected) {\n      setRedirect(true);\n    }\n    LoadTaskDetails();\n  }, []);\n\n  return (\n    <Container>\n      {redirect && navigate(\"/\")}\n      <Header />\n      <Form>\n        <TypeIcons>\n          {typeIcons.map(\n            (icon, index) =>\n              index > 0 && (\n                <button type=\"button\" onClick={() => setType(index)}>\n                  <img\n                    src={icon}\n                    alt=\"Tipo da Tarefa\"\n                    className={type && type != index && \"inative\"}\n                  />\n                </button>\n              )\n          )}\n        </TypeIcons>\n\n        <Input>\n          <span>Título</span>\n          <input\n            type=\"text\"\n            placeholder=\"Título da tarefa...\"\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n          />\n        </Input>\n\n        <TextArea>\n          <span>Descrição</span>\n          <textarea\n            rows={5}\n            placeholder=\"Detalhes da tarefa...\"\n            onChange={(e) => setDescription(e.target.value)}\n            value={description}\n          />\n        </TextArea>\n\n        <Input>\n          <span>Data</span>\n          <input\n            type=\"date\"\n            placeholder=\"Título da tarefa...\"\n            onChange={(e) => setDate(e.target.value)}\n            value={date}\n          />\n        </Input>\n\n        <Input>\n          <span>Hora</span>\n          <input\n            type=\"time\"\n            placeholder=\"Título da tarefa...\"\n            onChange={(e) => setHour(e.target.value)}\n            value={hour}\n          />\n        </Input>\n\n        <Options>\n          <div>\n            <input\n              type=\"checkbox\"\n              checked={done}\n              onChange={() => setDone(!done)}\n            />\n            <span>CONCLUÍDO</span>\n          </div>\n          {params.id && (\n            <button type=\"button\" onClick={Remove}>\n              EXCLUIR\n            </button>\n          )}\n        </Options>\n\n        <Save>\n          <button type=\"button\" onClick={Saving}>\n            SALVAR\n          </button>\n        </Save>\n      </Form>\n      <Footer />\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}